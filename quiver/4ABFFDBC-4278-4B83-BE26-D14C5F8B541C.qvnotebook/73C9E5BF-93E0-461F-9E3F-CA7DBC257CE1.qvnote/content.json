{
  "title": "Video TranscriptsÂ ",
  "cells": [
    {
      "type": "text",
      "data": "<div style=\"font-size: 17px;\"><h1>Introduction to HTML and the Portfolio Project</h1>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span id=\"video-authors\"></span><br></div><div style=\"font-size: 17px;\"><br></div><div style=\"font-size: 17px;\"><li><p>Hi, I'm Nick.</p>\n                </li>\n                <li>\n                  <em>0:05</em>\n                  <p>If you're totally new to web design\ndevelopment or if</p>\n                </li>\n                <li>\n                  <em>0:09</em>\n                  <p>you need a refresh, this is a good place\nto start.</p>\n                </li>\n                <li>\n                  <em>0:11</em>\n                  <p>In this course we're going to learn how to\nwrite HTML</p>\n                </li>\n                <li>\n                  <em>0:14</em>\n                  <p>and CSS which are the basic building\nblocks of any website.</p>\n                </li>\n                <li>\n                  <em>0:18</em>\n                  <p>Don't worry if you've never written a\nsingle line of code before.</p>\n                </li>\n                <li>\n                  <em>0:21</em>\n                  <p>We'll learn step by step so that you can\nfollow along.</p>\n                </li>\n                <li>\n                  <em>0:25</em>\n                  <p>By the end, we'll have created our very\nown personalized website that's live</p>\n                </li>\n                <li>\n                  <em>0:29</em>\n                  <p>on the web, available for anyone to view.\nLet's take a quick tour.</p>\n                </li>\n                <li>\n                  <em>0:35</em>\n                  <p>This website has three pages.</p>\n                </li>\n                <li>\n                  <em>0:38</em>\n                  <p>There's the Portfolio page, which you can\nsee here.</p>\n                </li>\n                <li>\n                  <em>0:42</em>\n                  <p>This allows you to show your design work,\nphotography or anything you'd like.</p>\n                </li>\n                <li>\n                  <em>0:48</em>\n                  <p>In fact, you could easily customize this</p>\n                </li>\n                <li>\n                  <em>0:50</em>\n                  <p>area to display your favorite family\npictures.</p>\n                </li>\n                <li>\n                  <em>0:54</em>\n                  <p>Next, we have an About page.\nHere, you can post a profile picture along</p>\n                </li>\n                <li>\n                  <em>1:01</em>\n                  <p>with a brief description of yourself.\nFinally, we have the Contact page.</p>\n                </li>\n                <li>\n                  <em>1:07</em>\n                  <p>Here, you can list out contact details\nlike</p>\n                </li>\n                <li>\n                  <em>1:10</em>\n                  <p>your phone number, email address and\nTwitter handle.</p>\n                </li>\n                <li>\n                  <em>1:15</em>\n                  <p>This is useful if you're a web designer\navailable for hire or if you're running</p>\n                </li>\n                <li>\n                  <em>1:20</em>\n                  <p>a business and you want people to be able\nto reach you.</p>\n                </li>\n                <li>\n                  <em>1:24</em>\n                  <p>We'll explain everything in detail but\nlet's warm</p>\n                </li>\n                <li>\n                  <em>1:27</em>\n                  <p>up by writing a single line of HTML.</p>\n                </li>\n                <li>\n                  <em>1:29</em>\n                  <p>We're going to write our name and then</p>\n                </li>\n                <li>\n                  <em>1:31</em>\n                  <p>wrap it in what's called a headline\nelement.</p>\n                </li>\n                <li>\n                  <em>1:35</em>\n                  <p>This element is just like a headline in a</p>\n                </li>\n                <li>\n                  <em>1:36</em>\n                  <p>newspaper, it labels an important section\nof the page.</p>\n                </li>\n                <li>\n                  <em>1:41</em>\n                  <p>I'm going to type out some code, and then\nin the code challenge after</p>\n                </li>\n                <li>\n                  <em>1:45</em>\n                  <p>this video, you can type in your own name.</p>\n                </li>\n                <li>\n                  <em>1:49</em>\n                  <p>The screen we're looking at is called\nWorkspaces.</p>\n                </li>\n                <li>\n                  <em>1:53</em>\n                  <p>We'll learn more about Workspaces in the\nnext video.</p>\n                </li>\n                <li>\n                  <em>1:55</em>\n                  <p>But, don't worry about following along\njust yet.</p>\n                </li>\n                <li>\n                  <em>1:59</em>\n                  <p>For now, just try to listen and absorb the\ninformation</p>\n                </li>\n                <li>\n                  <em>2:03</em>\n                  <p>so that you're ready for the code\nchallenge after this video.</p>\n                </li>\n                <li>\n                  <em>2:08</em>\n                  <p>First, we'll need to type an opening angle\nbracket.</p>\n                </li>\n                <li>\n                  <em>2:12</em>\n                  <p>On most keyboards, you can do this by\nholding</p>\n                </li>\n                <li>\n                  <em>2:14</em>\n                  <p>down Shift and pressing the comma key.</p>\n                </li>\n                <li>\n                  <em>2:19</em>\n                  <p>Next we'll type the letters H followed by\nthe number 1.</p>\n                </li>\n                <li>\n                  <em>2:25</em>\n                  <p>This will let us create a level one</p>\n                </li>\n                <li>\n                  <em>2:28</em>\n                  <p>headline which we'll talk more about in\nupcoming videos.</p>\n                </li>\n                <li>\n                  <em>2:33</em>\n                  <p>Now we'll close this with a closing angle\nbracket.</p>\n                </li>\n                <li>\n                  <em>2:37</em>\n                  <p>Just hold down Shift and hit the period or\nfull stop key.</p>\n                </li>\n                <li>\n                  <em>2:43</em>\n                  <p>You'll notice</p>\n                </li>\n                <li>\n                  <em>2:44</em>\n                  <p>that WorkSpaces has completed this line\nfor me.</p>\n                </li>\n                <li>\n                  <em>2:48</em>\n                  <p>It's typed the closing tag for this h1\nelement.</p>\n                </li>\n                <li>\n                  <em>2:54</em>\n                  <p>I am going to go ahead and delete this\nclosing tag</p>\n                </li>\n                <li>\n                  <em>2:56</em>\n                  <p>though, so that we can learn to type it on\nyour own.</p>\n                </li>\n                <li>\n                  <em>3:00</em>\n                  <p>We've created the opening tag but we also\nneed</p>\n                </li>\n                <li>\n                  <em>3:03</em>\n                  <p>to make a closing tag to pair with it.</p>\n                </li>\n                <li>\n                  <em>3:07</em>\n                  <p>To do that, we'll type the exact same\nthing,</p>\n                </li>\n                <li>\n                  <em>3:10</em>\n                  <p>only this time, we'll include a forward\nslash just before the h.</p>\n                </li>\n                <li>\n                  <em>3:15</em>\n                  <p>So, we'll type an opening angle bracket, a\nforward slash.</p>\n                </li>\n                <li>\n                  <em>3:20</em>\n                  <p>And once again, it's completed it for me.</p>\n                </li>\n                <li>\n                  <em>3:24</em>\n                  <p>But after the forward slash, we'll type an\nh, a one, and</p>\n                </li>\n                <li>\n                  <em>3:29</em>\n                  <p>then a closing angle bracket.\nAnd that will complete the h1 element.</p>\n                </li>\n                <li>\n                  <em>3:37</em>\n                  <p>Now, between these two tags, we'll type\nour name.</p>\n                </li>\n                <li>\n                  <em>3:41</em>\n                  <p>So, I'm going to click between the two\ntags</p>\n                </li>\n                <li>\n                  <em>3:45</em>\n                  <p>here and I'm going to type my name, Nick\nPettit.</p>\n                </li>\n                <li>\n                  <em>3:51</em>\n                  <p>But, you can go ahead and type your own\nname.</p>\n                </li>\n                <li>\n                  <em>3:54</em>\n                  <p>And that's it.</p>\n                </li>\n                <li>\n                  <em>3:56</em>\n                  <p>In the code challenge, you'll create an\nopening h1 tag with angle brackets.</p>\n                </li>\n                <li>\n                  <em>4:01</em>\n                  <p>Type in your name and</p>\n                </li>\n                <li>\n                  <em>4:02</em>\n                  <p>then create a closing tag with angle\nbrackets and</p>\n                </li>\n                <li>\n                  <em>4:06</em>\n                  <p>a forward slash just after the first angle\nbracket.</p>\n                </li>\n                <li>\n                  <em>4:12</em>\n                  <p>Are you ready to code some HTML?\nLet's try it out.</p><p><span id=\"video-duration\">4:17</span>&nbsp;Tut.time.length &nbsp;&nbsp;</p><h1>Follow Along with Workspaces</h1><div><span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span><br></div><div><br></div><div></div></li><li><p>As we build the project, you can follow\nalong in a tool that we call Workspaces.</p>\n                </li>\n                <li>\n                  <em>0:05</em>\n                  <p>Let's take a few minutes to learn about\nWorkspaces and see what it can do.</p>\n                </li>\n                <li>\n                  <em>0:10</em>\n                  <p>To open a workspace, just click the button\nnext to this video.</p>\n                </li>\n                <li>\n                  <em>0:14</em>\n                  <p>This will allow you to open a new\nworkspace</p>\n                </li>\n                <li>\n                  <em>0:17</em>\n                  <p>where you can type your code and build a\nproject.</p>\n                </li>\n                <li>\n                  <em>0:21</em>\n                  <p>Your workspace will probably look the same\nas mine, but if it doesn't, don't</p>\n                </li>\n                <li>\n                  <em>0:25</em>\n                  <p>worry.</p>\n                </li>\n                <li>\n                  <em>0:26</em>\n                  <p>It just means that workspaces has been\nupdated since this</p>\n                </li>\n                <li>\n                  <em>0:30</em>\n                  <p>video was created, and you're using the\nlatest and greatest version.</p>\n                </li>\n                <li>\n                  <em>0:35</em>\n                  <p>It should still work the same, and allow\nyou to follow along.</p>\n                </li>\n                <li>\n                  <em>0:38</em>\n                  <p>I'm going to switch over to a second</p>\n                </li>\n                <li>\n                  <em>0:40</em>\n                  <p>workspace that I have opened in another\nbrowser tab.</p>\n                </li>\n                <li>\n                  <em>0:44</em>\n                  <p>This has the completed project, and it's\nwhat you're workspace</p>\n                </li>\n                <li>\n                  <em>0:47</em>\n                  <p>will look like when you finish coding this\nentire website.</p>\n                </li>\n                <li>\n                  <em>0:53</em>\n                  <p>Let's take a quick tour of the interface\nand get familiar.</p>\n                </li>\n                <li>\n                  <em>0:57</em>\n                  <p>The file tree on the left lists all of our\nfiles and folders in the project.</p>\n                </li>\n                <li>\n                  <em>1:03</em>\n                  <p>We can click on one of these files to\nbring it up in the editor.</p>\n                </li>\n                <li>\n                  <em>1:08</em>\n                  <p>We can also click the right mouse button\nto bring up</p>\n                </li>\n                <li>\n                  <em>1:12</em>\n                  <p>a Context menu, which allows us to create\nnew files, delete files,</p>\n                </li>\n                <li>\n                  <em>1:18</em>\n                  <p>and generally make changes to the\ndirectory structure.</p>\n                </li>\n                <li>\n                  <em>1:23</em>\n                  <p>I can also click and drag files to put\nthem in other folders.</p>\n                </li>\n                <li>\n                  <em>1:31</em>\n                  <p>I can also click on these triangles to the\nleft of folders</p>\n                </li>\n                <li>\n                  <em>1:35</em>\n                  <p>to open and close them, and see the\ncontents of the folder.</p>\n                </li>\n                <li>\n                  <em>1:40</em>\n                  <p>For now, I'm going to switch back over to\nmy blank work space.</p>\n                </li>\n                <li>\n                  <em>1:46</em>\n                  <p>At this point, you should start following\nalong because each video builds on one</p>\n                </li>\n                <li>\n                  <em>1:51</em>\n                  <p>another, and you might be confused if you\nstart from somewhere in the middle.</p>\n                </li>\n                <li>\n                  <em>1:56</em>\n                  <p>When you're ready, create a new file and\ncall it index.html.</p>\n                </li>\n                <li>\n                  <em>2:03</em>\n                  <p>You can do this by right clicking and\nselecting</p>\n                </li>\n                <li>\n                  <em>2:06</em>\n                  <p>New File.\nAlternatively, you can go to the File</p>\n                </li>\n                <li>\n                  <em>2:10</em>\n                  <p>menu and select New File.\nBoth will work exactly the same.</p>\n                </li>\n                <li>\n                  <em>2:17</em>\n                  <p>Once you've created your file call it\nIndex.html and</p>\n                </li>\n                <li>\n                  <em>2:23</em>\n                  <p>hit enter.</p>\n                </li>\n                <li>\n                  <em>2:24</em>\n                  <p>If you accidentally hit Enter before\nnaming your file, just right click on it</p>\n                </li>\n                <li>\n                  <em>2:30</em>\n                  <p>and select Rename, and it will allow you\nto go ahead and rename your file.</p>\n                </li>\n                <li>\n                  <em>2:36</em>\n                  <p>Once you've typed that in, just hit enter.\nYou'll notice that when I hit enter,</p>\n                </li>\n                <li>\n                  <em>2:42</em>\n                  <p>WorkSpaces automatically opens up the file\nin the text editing area.</p>\n                </li>\n                <li>\n                  <em>2:48</em>\n                  <p>This is where I can make modifications to\nthe</p>\n                </li>\n                <li>\n                  <em>2:50</em>\n                  <p>file, and it's basically where we'll build\nout our site.</p>\n                </li>\n                <li>\n                  <em>2:54</em>\n                  <p>Now, I'm going to type an h1 element.</p>\n                </li>\n                <li>\n                  <em>2:59</em>\n                  <p>Workspaces has a feature called code\ncompletion.</p>\n                </li>\n                <li>\n                  <em>3:03</em>\n                  <p>When I type the first h1 tag, it\nautomatically closes the element</p>\n                </li>\n                <li>\n                  <em>3:09</em>\n                  <p>for me, and moves the insertion point\nbetween the opening and closing tags.</p>\n                </li>\n                <li>\n                  <em>3:14</em>\n                  <p>This allows me to work more quickly,\nbecause I'm typing less code.</p>\n                </li>\n                <li>\n                  <em>3:20</em>\n                  <p>Between the tags, I'm going to type my\nname,</p>\n                </li>\n                <li>\n                  <em>3:23</em>\n                  <p>but you should go ahead and type your own\nname.</p>\n                </li>\n                <li>\n                  <em>3:27</em>\n                  <p>Now, let's save the file.</p>\n                </li>\n                <li>\n                  <em>3:30</em>\n                  <p>We're going to save files very frequently,\nso</p>\n                </li>\n                <li>\n                  <em>3:33</em>\n                  <p>it's best to learn the shortcut key for\nthis.</p>\n                </li>\n                <li>\n                  <em>3:37</em>\n                  <p>On a Mac, simply press Cmd+S to save the\nfile.</p>\n                </li>\n                <li>\n                  <em>3:41</em>\n                  <p>On Windows, press Ctrl+S.\nRight now there's a little orange dot</p>\n                </li>\n                <li>\n                  <em>3:49</em>\n                  <p>next to the file, meaning it's unsaved.\nWhen I</p>\n                </li>\n                <li>\n                  <em>3:53</em>\n                  <p>save it using the shortcut key, the dot\ndisappears and my changes have been saved.</p>\n                </li>\n                <li>\n                  <em>3:59</em>\n                  <p>Now we're ready to preview our web page.</p>\n                </li>\n                <li>\n                  <em>4:03</em>\n                  <p>I'm going to open up the Preview area</p>\n                </li>\n                <li>\n                  <em>4:05</em>\n                  <p>by clicking this icon in the upper right\ncorner.</p>\n                </li>\n                <li>\n                  <em>4:09</em>\n                  <p>And just like that, we can see what our h1\nelement looks like in a web browser.</p>\n                </li>\n                <li>\n                  <em>4:16</em>\n                  <p>When I make changes to the file and</p>\n                </li>\n                <li>\n                  <em>4:18</em>\n                  <p>save them, you can see the changes in the\npreview area immediately.</p>\n                </li>\n                <li>\n                  <em>4:23</em>\n                  <p>Let's try changing the name here, to\nsomething else.</p>\n                </li>\n                <li>\n                  <em>4:28</em>\n                  <p>So, I'm going to highlight my name, and\nthen I'm going to type</p>\n                </li>\n                <li>\n                  <em>4:34</em>\n                  <p>something else.\nWhen I hit the save keyboard shortcut,</p>\n                </li>\n                <li>\n                  <em>4:42</em>\n                  <p>we can switch over to our preview and\nclick refresh,</p>\n                </li>\n                <li>\n                  <em>4:47</em>\n                  <p>and you'll see that something else now\nappears in the browser.</p>\n                </li>\n                <li>\n                  <em>4:52</em>\n                  <p>Now let's switch back to our workspace and\nundo these changes.</p>\n                </li>\n                <li>\n                  <em>4:58</em>\n                  <p>You may need to undo things frequently, so\nit's</p>\n                </li>\n                <li>\n                  <em>5:01</em>\n                  <p>also best to learn the keyboard shortcut\nfor this.</p>\n                </li>\n                <li>\n                  <em>5:04</em>\n                  <p>On a Mac, just hit Cmd+Z,</p>\n                </li>\n                <li>\n                  <em>5:07</em>\n                  <p>on Windows you can press Ctrl+Z.</p>\n                </li>\n                <li>\n                  <em>5:11</em>\n                  <p>I'm going to use the keyboard shortcut to\nundo our changes.</p>\n                </li>\n                <li>\n                  <em>5:16</em>\n                  <p>Then I'm going to use the keyboard\nshortcut to save.</p>\n                </li>\n                <li>\n                  <em>5:20</em>\n                  <p>And finally, I'm going to switch back to\nour workspace.</p>\n                </li>\n                <li>\n                  <em>5:25</em>\n                  <p>And we need to refresh the page to see our\nchanges.</p>\n                </li>\n                <li>\n                  <em>5:29</em>\n                  <p>I could just click on the Refresh icon\nhere.</p>\n                </li>\n                <li>\n                  <em>5:33</em>\n                  <p>But instead, I'm going to use the keyboard\nshortcut to refresh, because once</p>\n                </li>\n                <li>\n                  <em>5:37</em>\n                  <p>again, refreshing the page is also\nsomething you're gonna do frequently.</p>\n                </li>\n                <li>\n                  <em>5:43</em>\n                  <p>To refresh on a Mac, just hit Cmd+R.\nI refresh on Windows, hit Ctrl+R.</p>\n                </li>\n                <li>\n                  <em>5:51</em>\n                  <p>I'm going to refresh our page here.</p>\n                </li>\n                <li>\n                  <em>5:54</em>\n                  <p>And, as you can see, our changes have been\nreverted.</p>\n                </li>\n                <li>\n                  <em>5:59</em>\n                  <p>Workspaces has a lot more to offer, but\nthat covers the basics.</p>\n                </li>\n                <li>\n                  <em>6:03</em>\n                  <p>I recommend you play around with</p>\n                </li>\n                <li>\n                  <em>6:05</em>\n                  <p>Workspaces to get familiar with the\ninterface.</p>\n                </li>\n                <li>\n                  <em>6:08</em>\n                  <p>As you work through projects on Treehouse,\nyou'll learn about</p>\n                </li>\n                <li>\n                  <em>6:10</em>\n                  <p>specific features of Workspaces as you\nneed to use them.</p></li></div>\n        <span id=\"video-authors\"></span><p>6:14Tut.time.length</p><p>&nbsp;</p><div class=\"secondary-heading\">\n        <h1>Add Style to the Page</h1><h1><span style=\"font-size: 17px;\">&nbsp;</span><span id=\"video-authors\" style=\"font-size: 17px;\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span></h1><div><li><p>HTML, or Hypertext Markup Language, forms\nthe structural foundation of any webpage.\n</p>\n                </li>\n                <li>\n                  <em>0:06</em>\n                  <p>But there are many other languages that\nfall into the realm of web development.\n</p>\n                </li>\n                <li>\n                  <em>0:10</em>\n                  <p>To build this project we're also going to\nlearn CSS or Cascading Style Sheets.\n</p>\n                </li>\n                <li>\n                  <em>0:15</em>\n                  <p>This language will help us modify things\n</p>\n                </li>\n                <li>\n                  <em>0:17</em>\n                  <p>like fonts, colors, page layout, and so\non.\n</p>\n                </li>\n                <li>\n                  <em>0:21</em>\n                  <p>Just about anything that has to do\n</p>\n                </li>\n                <li>\n                  <em>0:22</em>\n                  <p>with visual esthetics can be accomplished\nwith CSS.\n</p>\n                </li>\n                <li>\n                  <em>0:26</em>\n                  <p>Just like HTML, we'll get into CSS in much\nmore detail later on, but we\n</p>\n                </li>\n                <li>\n                  <em>0:31</em>\n                  <p>should try out some simple CSS first, just\nso that you can see how it works.\n</p>\n                </li>\n                <li>\n                  <em>0:36</em>\n                  <p>Let's jump into our workspace and add some\nstyle.\n</p>\n                </li>\n                <li>\n                  <em>0:39</em>\n                  <p>Workspaces has several settings that we\n</p>\n                </li>\n                <li>\n                  <em>0:42</em>\n                  <p>can adjust, depending on our personal\npreferences.\n</p>\n                </li>\n                <li>\n                  <em>0:46</em>\n                  <p>I'm going to click on the View menu, and\nI'm going to select Highlight Active Line.\n</p>\n                </li>\n                <li>\n                  <em>0:53</em>\n                  <p>This won't change anything about the\nproject, but\n</p>\n                </li>\n                <li>\n                  <em>0:56</em>\n                  <p>it will highlight the line that we're\nworking on.\n</p>\n                </li>\n                <li>\n                  <em>1:00</em>\n                  <p>If I press Enter a few times and create\nmore lines,\n</p>\n                </li>\n                <li>\n                  <em>1:04</em>\n                  <p>you can see that it will highlight\nwherever my cursor is.\n</p>\n                </li>\n                <li>\n                  <em>1:10</em>\n                  <p>I'm going to delete these extra lines,\nbecause we won't need them.\n</p>\n                </li>\n                <li>\n                  <em>1:14</em>\n                  <p>But if you'd like to turn on line\nhighlighting as well, you can go ahead and\n</p>\n                </li>\n                <li>\n                  <em>1:18</em>\n                  <p>do so in the View menu.\n</p>\n                </li>\n                <li>\n                  <em>1:22</em>\n                  <p>You can also make other changes in the\nView\n</p>\n                </li>\n                <li>\n                  <em>1:24</em>\n                  <p>menu, such as increasing or decreasing the\nfont size.\n</p>\n                </li>\n                <li>\n                  <em>1:30</em>\n                  <p>You can also restore the default font\nsize.\n</p>\n                </li>\n                <li>\n                  <em>1:34</em>\n                  <p>In addition, you can adjust these using\nkeyboard shortcuts.\n</p>\n                </li>\n                <li>\n                  <em>1:38</em>\n                  <p>So, I can go ahead and hit Command plus\n</p>\n                </li>\n                <li>\n                  <em>1:41</em>\n                  <p>on my Mac to increase or decrease the font\nsize.\n</p>\n                </li>\n                <li>\n                  <em>1:48</em>\n                  <p>Now, let's get back to our project.\nSo far, we have a first level headline\n</p>\n                </li>\n                <li>\n                  <em>1:53</em>\n                  <p>element on the page.\nLet's try to change this to a blue color.\n</p>\n                </li>\n                <li>\n                  <em>1:59</em>\n                  <p>Just above the headline, I'm going to\ncreate a new blank line.\n</p>\n                </li>\n                <li>\n                  <em>2:05</em>\n                  <p>And I'm going to type some style tags,\nlike this.\n</p>\n                </li>\n                <li>\n                  <em>2:11</em>\n                  <p>Once again, you'll notice that work spaces\nauto completes\n</p>\n                </li>\n                <li>\n                  <em>2:15</em>\n                  <p>the style element, once I've typed the\nopening tag.\n</p>\n                </li>\n                <li>\n                  <em>2:19</em>\n                  <p>Now, inside these tags, we can write CSS,\n</p>\n                </li>\n                <li>\n                  <em>2:23</em>\n                  <p>which is another language in addition to\nHTML.\n</p>\n                </li>\n                <li>\n                  <em>2:26</em>\n                  <p>We'll learn more about CSS and HTML, but\nfor now, just go\n</p>\n                </li>\n                <li>\n                  <em>2:31</em>\n                  <p>ahead and follow along with me.\nEven though we're doing this inside of\n</p>\n                </li>\n                <li>\n                  <em>2:36</em>\n                  <p>a HTML file, CSS is a different language\n</p>\n                </li>\n                <li>\n                  <em>2:40</em>\n                  <p>with a different syntax, so pay close\nattention.\n</p>\n                </li>\n                <li>\n                  <em>2:45</em>\n                  <p>Now I'm going to hit enter a few times to\nmake some room to work.\n</p>\n                </li>\n                <li>\n                  <em>2:51</em>\n                  <p>Now between our style tags I'm going to\n</p>\n                </li>\n                <li>\n                  <em>2:54</em>\n                  <p>hit the Tab key to indent my code\nslightly.\n</p>\n                </li>\n                <li>\n                  <em>2:58</em>\n                  <p>That way I'll know what code is inside of\nmy\n</p>\n                </li>\n                <li>\n                  <em>3:02</em>\n                  <p>style tags and it will be easily readable.\n</p>\n                </li>\n                <li>\n                  <em>3:05</em>\n                  <p>This doesn't affect the functionality of\nthe code at all.\n</p>\n                </li>\n                <li>\n                  <em>3:08</em>\n                  <p>But once again, it makes it easer to read.\n</p>\n                </li>\n                <li>\n                  <em>3:12</em>\n                  <p>These tabs will make it clear that the\ncode that I'm about to type is nested\n</p>\n                </li>\n                <li>\n                  <em>3:17</em>\n                  <p>inside of our style tags.\nDown in the bottom right, you'll\n</p>\n                </li>\n                <li>\n                  <em>3:22</em>\n                  <p>notice that workspaces has automatically\ndetected that this is an HTML\n</p>\n                </li>\n                <li>\n                  <em>3:27</em>\n                  <p>file, so it will highlight our code\nappropriately and make it easy to read.\n</p>\n                </li>\n                <li>\n                  <em>3:32</em>\n                  <p>You'll also see the word spaces and 2 down\nhere.\n</p>\n                </li>\n                <li>\n                  <em>3:38</em>\n                  <p>If I click on spaces, it will switch to\nTab size.\n</p>\n                </li>\n                <li>\n                  <em>3:43</em>\n                  <p>But we want to keep this as spaces.\nThe difference is that when I hit Tab,\n</p>\n                </li>\n                <li>\n                  <em>3:52</em>\n                  <p>having spaces selected, will type spaces\ninstead of a full Tab.\n</p>\n                </li>\n                <li>\n                  <em>3:59</em>\n                  <p>You can see that there are two separate\nspaces here if I highlight it.\n</p>\n                </li>\n                <li>\n                  <em>4:04</em>\n                  <p>I can adjust the number of spaces at types\nby just clicking\n</p>\n                </li>\n                <li>\n                  <em>4:08</em>\n                  <p>this number 2 and changing it to a 4, and\nhitting Enter.\n</p>\n                </li>\n                <li>\n                  <em>4:14</em>\n                  <p>Now, if I type in my workspace, and hit a\nTab,\n</p>\n                </li>\n                <li>\n                  <em>4:18</em>\n                  <p>it will actually indent by four spaces.\n</p>\n                </li>\n                <li>\n                  <em>4:23</em>\n                  <p>This is just a personal preference, so you\ncan\n</p>\n                </li>\n                <li>\n                  <em>4:26</em>\n                  <p>go ahead and change this to whatever you'd\nlike.\n</p>\n                </li>\n                <li>\n                  <em>4:29</em>\n                  <p>However, most programmers use spaces and\nthey only use\n</p>\n                </li>\n                <li>\n                  <em>4:34</em>\n                  <p>two spaces, so you may wanna keep those\ndefaults.\n</p>\n                </li>\n                <li>\n                  <em>4:39</em>\n                  <p>Once again, this will not change the\nfunctionality of your code.\n</p>\n                </li>\n                <li>\n                  <em>4:43</em>\n                  <p>It's just personal preference and makes\nyour code easier to read.\n</p>\n                </li>\n                <li>\n                  <em>4:48</em>\n                  <p>I've deleted\n</p>\n                </li>\n                <li>\n                  <em>4:48</em>\n                  <p>my Tab.\n</p>\n                </li>\n                <li>\n                  <em>4:49</em>\n                  <p>So I'm going to hit Tab once again,\n</p>\n                </li>\n                <li>\n                  <em>4:52</em>\n                  <p>which will actually type two spaces in\nthis case.\n</p>\n                </li>\n                <li>\n                  <em>4:55</em>\n                  <p>And I'm going to type H1.\n</p>\n                </li>\n                <li>\n                  <em>4:59</em>\n                  <p>This is what's called a selector.\nIt will tell the browser which\n</p>\n                </li>\n                <li>\n                  <em>5:05</em>\n                  <p>HTML element we would like to apply our\nstyling to.\n</p>\n                </li>\n                <li>\n                  <em>5:10</em>\n                  <p>More specifically, this is what is called\nan element selector.\n</p>\n                </li>\n                <li>\n                  <em>5:14</em>\n                  <p>There are many different types of CSS\nselectors that we'll\n</p>\n                </li>\n                <li>\n                  <em>5:17</em>\n                  <p>learn about, but this one is very simple\nfor now.\n</p>\n                </li>\n                <li>\n                  <em>5:21</em>\n                  <p>Next, let's type a space after our H1,\nfollowed by two curly braces.\n</p>\n                </li>\n                <li>\n                  <em>5:29</em>\n                  <p>You can type curly braces by pressing\nShift\n</p>\n                </li>\n                <li>\n                  <em>5:32</em>\n                  <p>and the square bracket keys on your\nkeyboard.\n</p>\n                </li>\n                <li>\n                  <em>5:37</em>\n                  <p>So that's an opening curly brace.\n</p>\n                </li>\n                <li>\n                  <em>5:40</em>\n                  <p>And that's a closing curly brace.\n</p>\n                </li>\n                <li>\n                  <em>5:44</em>\n                  <p>Now, place your cursor between the two\ncurly braces and press Enter twice.\n</p>\n                </li>\n                <li>\n                  <em>5:51</em>\n                  <p>This will give us some space to work.\n</p>\n                </li>\n                <li>\n                  <em>5:53</em>\n                  <p>Once again, I'm going to hit Tab to indent\nmy code again, because the code I'm about\n</p>\n                </li>\n                <li>\n                  <em>6:00</em>\n                  <p>to type will be nested inside of this\nelement selector, which is nested further\n</p>\n                </li>\n                <li>\n                  <em>6:05</em>\n                  <p>inside of our style tags.\nFinally, we're ready to apply some styling\n</p>\n                </li>\n                <li>\n                  <em>6:11</em>\n                  <p>to our headline element.\nType out the word color like this.\n</p>\n                </li>\n                <li>\n                  <em>6:18</em>\n                  <p>Then, type a colon by holding down Shift\nand pressing the semicolon key, followed\n</p>\n                </li>\n                <li>\n                  <em>6:26</em>\n                  <p>by a space, and then typing the word blue.\nAt the\n</p>\n                </li>\n                <li>\n                  <em>6:32</em>\n                  <p>end of this line, type a semicolon.\n</p>\n                </li>\n                <li>\n                  <em>6:37</em>\n                  <p>The first part of this line is what's\ncalled a property.\n</p>\n                </li>\n                <li>\n                  <em>6:41</em>\n                  <p>And the second part of this line is what's\ncalled a value.\n</p>\n                </li>\n                <li>\n                  <em>6:47</em>\n                  <p>We'll go over many CSS properties and\nvalues later on, but for now, it's\n</p>\n                </li>\n                <li>\n                  <em>6:53</em>\n                  <p>just important to get the syntax right.\nIn workspaces,\n</p>\n                </li>\n                <li>\n                  <em>6:58</em>\n                  <p>if you highlight a CSS color, it will give\n</p>\n                </li>\n                <li>\n                  <em>7:01</em>\n                  <p>you a preview of what that color looks\nlike.\n</p>\n                </li>\n                <li>\n                  <em>7:06</em>\n                  <p>Make sure that you've typed everything in\nyour workspace, just\n</p>\n                </li>\n                <li>\n                  <em>7:09</em>\n                  <p>as I have in my workspace, and then save\nthe file.\n</p>\n                </li>\n                <li>\n                  <em>7:14</em>\n                  <p>Once again, you can do this by hitting\nCmd+S on a Mac or Ctrl+S on Windows.\n</p>\n                </li>\n                <li>\n                  <em>7:21</em>\n                  <p>You can, of course, also do\n</p>\n                </li>\n                <li>\n                  <em>7:23</em>\n                  <p>this by going to the File menu, and\nhitting Save.\n</p>\n                </li>\n                <li>\n                  <em>7:27</em>\n                  <p>But it's faster to use the keyboard\nshortcut.\n</p>\n                </li>\n                <li>\n                  <em>7:31</em>\n                  <p>Now, if we preview our work space, you'll\nsee\n</p>\n                </li>\n                <li>\n                  <em>7:35</em>\n                  <p>that the text color has changed from black\nto blue.\n</p>\n                </li>\n                <li>\n                  <em>7:41</em>\n                  <p>Changing colors is probably the simplest\nthing that you can do in CSS.\n</p>\n                </li>\n                <li>\n                  <em>7:45</em>\n                  <p>There's much more to learn.\n</p>\n                </li>\n                <li>\n                  <em>7:46</em>\n                  <p>And as we'll discover,\n</p>\n                </li>\n                <li>\n                  <em>7:48</em>\n                  <p>CSS is extremely powerful, and can do far\nmore than just simple text formatting.\n</p>\n                </li>\n                <li>\n                  <em>7:54</em>\n                  <p>In fact, most CSS is so complex that you\nwouldn't\n</p>\n                </li>\n                <li>\n                  <em>7:57</em>\n                  <p>ever want to put it inside of your HTML\ndocument.\n</p>\n                </li>\n                <li>\n                  <em>8:00</em>\n                  <p>As we'll learn later on, most websites\n</p>\n                </li>\n                <li>\n                  <em>8:02</em>\n                  <p>are built with separate HTML and CSS\ndocuments.\n</p>\n                </li>\n                <li>\n                  <em>8:07</em>\n                  <p>If you think you're ready, take the code\nchallenge after this video.\n</p>\n                </li>\n                <li>\n                  <em>8:10</em>\n                  <p>And write some CSS on your own.</p><p><span id=\"video-duration\">8:13</span>&nbsp;Tut.time.length</p><p>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;<span id=\"video-authors\"></span><br></p><div id=\"video-meta\">\n      <div class=\"secondary-heading\">\n        <h1>The Button Element</h1>\n        <span id=\"video-duration\">2:06</span>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span>\n      </div>\n      </div><p>A form is not complete without a submit button. Once a user has\n finished filling out a form, they should be able to click a button that\n sends their data to the web server.&nbsp;</p></li><li><p>A form is not complete without a Submit\nbutton.</p>\n                </li><li>\n                  <em>0:03</em>\n                  <p>Once a user has finished filling out a\nform,</p>\n                </li><li>\n                  <em>0:06</em>\n                  <p>they should be able to click a button that</p>\n                </li><li>\n                  <em>0:08</em>\n                  <p>sends their data to the web server via the</p>\n                </li><li>\n                  <em>0:11</em>\n                  <p>action and method attributes we specified\nin the form element.</p>\n                </li><li>\n                  <em>0:15</em>\n                  <p>As I mentioned previously, it would take\nmore server</p>\n                </li><li>\n                  <em>0:18</em>\n                  <p>side code programming to make this form\nactually submit anywhere.</p>\n                </li><li>\n                  <em>0:22</em>\n                  <p>But it's still important to learn about\nthe HTML elements that make up a form.</p>\n                </li><li>\n                  <em>0:28</em>\n                  <p>One of those important form elements is\nthe Button element.</p>\n                </li><li>\n                  <em>0:32</em>\n                  <p>I'm going to type one out and then will\nexplain how it works.</p>\n                </li><li>\n                  <em>0:36</em>\n                  <p>Just below my text area here, I'm going to\ntype a Button element.</p>\n                </li><li>\n                  <em>0:42</em>\n                  <p>And I'm going to make it of type Submit.</p>\n                </li><li>\n                  <em>0:48</em>\n                  <p>And then it will automatically close my\nButton element if I'm using workspaces.</p>\n                </li><li>\n                  <em>0:54</em>\n                  <p>And inside of it, I can type Sign Up.</p>\n                </li><li>\n                  <em>0:58</em>\n                  <p>So let's save that out, switch over to the\nbrowser, and refresh the page.</p>\n                </li><li>\n                  <em>1:02</em>\n                  <p>And as you can see, we have a nicely\nstyled</p>\n                </li><li>\n                  <em>1:05</em>\n                  <p>button that we can click, and it will\nsubmit our form.</p>\n                </li><li>\n                  <em>1:10</em>\n                  <p>Of course in this particular case, we're\nnot</p>\n                </li><li>\n                  <em>1:11</em>\n                  <p>actually submitting anywhere so it won't\nquite work.</p>\n                </li><li>\n                  <em>1:15</em>\n                  <p>But that's generally what a button will\nlook like if it's styled.</p>\n                </li><li>\n                  <em>1:20</em>\n                  <p>Similar to the text area element, buttons\nare not self closing.</p>\n                </li><li>\n                  <em>1:24</em>\n                  <p>They require an opening and a closing tag.</p>\n                </li><li>\n                  <em>1:28</em>\n                  <p>The type attribute in this particular case\nis Submit.</p>\n                </li><li>\n                  <em>1:33</em>\n                  <p>But there are two other types called Reset\nand Button.</p>\n                </li><li>\n                  <em>1:39</em>\n                  <p>The Reset type will automatically clear\nall form data when it's clicked.</p>\n                </li><li>\n                  <em>1:43</em>\n                  <p>The Button type has no default behavior,\nand it's</p>\n                </li><li>\n                  <em>1:46</em>\n                  <p>mostly intended to be used in combination\nwith JavaScript.</p>\n                </li><li>\n                  <em>1:50</em>\n                  <p>The type we've used here is Submit.</p>\n                </li><li>\n                  <em>1:53</em>\n                  <p>The default behavior of the Submit type is\nto, as the name</p>\n                </li><li>\n                  <em>1:57</em>\n                  <p>implies, submit the form and send all the\ndata over to the server.</p>\n                </li><li>\n                  <em>2:01</em>\n                  <p>That`s it for buttons.</p>\n                </li><p>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                </p><li>\n                  <em>2:03</em>\n                  <p>Next up, we`ll learn how to organize our\nformâ¦â¦â¦â¦</p><div id=\"video-meta\">\n      <div class=\"secondary-heading\">\n        <h1>The Form Element</h1>\n        <span id=\"video-duration\">3:11</span>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span>\n      </div>\n      <p>The first element weâll learn about is the form element. This \nspecial element wraps all the other elements that go inside of our form.</p></div></li><li><p>The first element we'll learn about is the\nform element.</p>\n                </li><li>\n                  <em>0:03</em>\n                  <p>This special element wraps all the other\nelements that go inside of our form.</p>\n                </li><li>\n                  <em>0:08</em>\n                  <p>I'm going to type out a form element, and\nthen I'll explain how it works.</p>\n                </li><li>\n                  <em>0:13</em>\n                  <p>So inside of our work space here, we want\nto jump into the body.</p>\n                </li><li>\n                  <em>0:18</em>\n                  <p>And inside of the body, we'll type form.</p>\n                </li><li>\n                  <em>0:23</em>\n                  <p>And because of work spaces code\ncompletion,</p>\n                </li><li>\n                  <em>0:26</em>\n                  <p>it should automatically type the closing\nform tag.</p>\n                </li><li>\n                  <em>0:30</em>\n                  <p>So let's save this.</p>\n                </li><li>\n                  <em>0:32</em>\n                  <p>And let's open up our preview area, which\nyou can</p>\n                </li><li>\n                  <em>0:36</em>\n                  <p>get to by clicking the little Preview icon\nright here.</p>\n                </li><li>\n                  <em>0:40</em>\n                  <p>And, right now it's blank, but I'm going\nto refresh the page.</p>\n                </li><li>\n                  <em>0:45</em>\n                  <p>And you should see a very light gray area\nright here.</p>\n                </li><li>\n                  <em>0:49</em>\n                  <p>And that's because of the styling that's\nbeing applied to form elements.</p>\n                </li><li>\n                  <em>0:54</em>\n                  <p>So let's go back, and one thing I want to\npoint out before</p>\n                </li><li>\n                  <em>0:58</em>\n                  <p>we move any further is that you cannot\nhave forms nested inside other forms.</p>\n                </li><li>\n                  <em>1:04</em>\n                  <p>So [SOUND] you cannot type something like\nthat</p>\n                </li><li>\n                  <em>1:09</em>\n                  <p>because it's invalid HTML, and it won't\nwork.</p>\n                </li><li>\n                  <em>1:13</em>\n                  <p>So let's remove that.</p>\n                </li><li>\n                  <em>1:15</em>\n                  <p>Our form won't actually submit data\nanywhere, but with a server</p>\n                </li><li>\n                  <em>1:20</em>\n                  <p>side language like PHP, Ruby, or Python,\nwe could process the data.</p>\n                </li><li>\n                  <em>1:25</em>\n                  <p>Part of processing that data involves two\nimportant</p>\n                </li><li>\n                  <em>1:29</em>\n                  <p>attributes that are attached to the form\nelement.</p>\n                </li><li>\n                  <em>1:32</em>\n                  <p>So I'm going to type those out and then\nexplain them.</p>\n                </li><li>\n                  <em>1:35</em>\n                  <p>Let's take a look.</p>\n                </li><li>\n                  <em>1:37</em>\n                  <p>First is the action attribute, and inside\nof this I'm going to type a URL.</p>\n                </li><li>\n                  <em>1:47</em>\n                  <p>In this case, I'm typing a relative URL,\nand</p>\n                </li><li>\n                  <em>1:50</em>\n                  <p>it's going to be index.html which is\nactually this file.</p>\n                </li><li>\n                  <em>1:54</em>\n                  <p>But, in other cases, we might have this\nsubmit elsewhere to a server side script.</p>\n                </li><li>\n                  <em>2:02</em>\n                  <p>Then I'm going to type the method\nattribute.</p>\n                </li><li>\n                  <em>2:05</em>\n                  <p>And in this case, I'm going to give it the\nvalue post.</p>\n                </li><li>\n                  <em>2:11</em>\n                  <p>As I mentioned previously, the action\nattribute is the web address</p>\n                </li><li>\n                  <em>2:15</em>\n                  <p>of a program that processes the\ninformation submitted via the form.</p>\n                </li><li>\n                  <em>2:20</em>\n                  <p>The method attribute is the HTTP method\nthat the browser uses to submit the form.</p>\n                </li><li>\n                  <em>2:27</em>\n                  <p>Possible values are POST or GET.</p>\n                </li><li>\n                  <em>2:30</em>\n                  <p>POST corresponds to the HTTP POST method.</p>\n                </li><li>\n                  <em>2:34</em>\n                  <p>That means that data from the body of the\nform is sent, or posted, to the server.</p>\n                </li><li>\n                  <em>2:41</em>\n                  <p>GET corresponds to the HTTP GET method.</p>\n                </li><li>\n                  <em>2:44</em>\n                  <p>In this case, data is sent inside of the</p>\n                </li><li>\n                  <em>2:47</em>\n                  <p>URL, and parameters are separated with a\nquestion mark.</p>\n                </li><li>\n                  <em>2:52</em>\n                  <p>Most of the time, you'll use POST.</p>\n                </li><li>\n                  <em>2:54</em>\n                  <p>If you're working on a team and you're not\nthe person</p>\n                </li><li>\n                  <em>2:57</em>\n                  <p>writing the server-side code, be sure to\ntalk to the other developers.</p>\n                </li><li>\n                  <em>3:02</em>\n                  <p>It's important to coordinate this piece of\nfront-end code with the</p>\n                </li><p>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                </p><li>\n                  <em>3:06</em>\n                  <p>back-end so that the client and server can\ntalk to one another.</p><div class=\"secondary-heading\"><div id=\"video-meta\">\n      <div class=\"secondary-heading\">\n        <h1>The Input Element</h1>\n        <span id=\"video-duration\">5:30</span>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span>\n      </div>\n      <p>The input element is the most commonly used form element. We can use the input element to make text fields, and much more.</p></div></div></li><li><p>The input element is the most commonly\nused form element.</p>\n                </li><li>\n                  <em>0:04</em>\n                  <p>We'll start out with some simple text\nfields but, later</p>\n                </li><li>\n                  <em>0:07</em>\n                  <p>on, we'll use the input element again in\nother ways.</p>\n                </li><li>\n                  <em>0:12</em>\n                  <p>Let's make a simple text field where the\nuser can type in their name.</p>\n                </li><li>\n                  <em>0:16</em>\n                  <p>I'm going to type out some code and then\nI'll explain it.</p>\n                </li><li>\n                  <em>0:20</em>\n                  <p>So, first we need to provide a header for\nour form.</p>\n                </li><li>\n                  <em>0:25</em>\n                  <p>This isn't required, but it's going to\nmake our form look nicer.</p>\n                </li><li>\n                  <em>0:28</em>\n                  <p>So I'm going to type an h1 and I'm going\nto type in, Sign Up.</p>\n                </li><li>\n                  <em>0:34</em>\n                  <p>Save this out and refresh and now our form\nhas this nice header.</p>\n                </li><li>\n                  <em>0:40</em>\n                  <p>So now let's type out one of those input\nelements.</p>\n                </li><li>\n                  <em>0:44</em>\n                  <p>I'm going to make some space at the\nbottom, just so you</p>\n                </li><li>\n                  <em>0:48</em>\n                  <p>can see what I'm doing up here and, I'm\ngoing to type input.</p>\n                </li><li>\n                  <em>0:54</em>\n                  <p>And then I'm going to type some\nattributes.</p>\n                </li><li>\n                  <em>0:56</em>\n                  <p>And you can see that workspaces is</p>\n                </li><li>\n                  <em>0:59</em>\n                  <p>automatically suggesting some attributes\nfor me to type.</p>\n                </li><li>\n                  <em>1:02</em>\n                  <p>I'm going to put in the type attribute and\nthen I'll give it the type text.</p>\n                </li><li>\n                  <em>1:11</em>\n                  <p>I'm going to give it an ID of name and\nthen I'm going to type a name</p>\n                </li><li>\n                  <em>1:18</em>\n                  <p>attribute, and I'll type user_name.</p>\n                </li><li>\n                  <em>1:23</em>\n                  <p>And when I save that out, switch over to\nmy preview, and refresh.</p>\n                </li><li>\n                  <em>1:31</em>\n                  <p>You can see that I now have a text area\nand I can type in my name.</p>\n                </li><li>\n                  <em>1:38</em>\n                  <p>As you can see, the input element is a\nself-closing tag.</p>\n                </li><li>\n                  <em>1:42</em>\n                  <p>There's no need to type a closing tag to\nmatch the opening tag.</p>\n                </li><li>\n                  <em>1:47</em>\n                  <p>When I created the input element I added\nthree attributes here.</p>\n                </li><li>\n                  <em>1:52</em>\n                  <p>Lets take a look at each one in detail.</p>\n                </li><li>\n                  <em>1:54</em>\n                  <p>The type attribute indicates what kind of\ninput we want.</p>\n                </li><li>\n                  <em>2:00</em>\n                  <p>There are many possible values for this\nparticular attribute, such as</p>\n                </li><li>\n                  <em>2:05</em>\n                  <p>email, tel for telephone, and password\njust to name a few.</p>\n                </li><li>\n                  <em>2:10</em>\n                  <p>We'll be working with more input types in\nthis project.</p>\n                </li><li>\n                  <em>2:13</em>\n                  <p>But if you'd like to see a comprehensive\nlist of all the types, be sure to</p>\n                </li><li>\n                  <em>2:17</em>\n                  <p>look in the notes associated with this\nvideo</p>\n                </li><li>\n                  <em>2:20</em>\n                  <p>and view the documentation for the input\nelement.</p>\n                </li><li>\n                  <em>2:23</em>\n                  <p>The ID attribute is not required, but it's\na good idea to add one.</p>\n                </li><li>\n                  <em>2:29</em>\n                  <p>In some cases, this is helpful for</p>\n                </li><li>\n                  <em>2:31</em>\n                  <p>targeting elements with CSS or Java\nScript.</p>\n                </li><li>\n                  <em>2:35</em>\n                  <p>However, in this project we'll need ID\nattributes so</p>\n                </li><li>\n                  <em>2:39</em>\n                  <p>that we can associate labels to specific\nform controls.</p>\n                </li><li>\n                  <em>2:44</em>\n                  <p>We'll learn more about the label element\nvery soon.</p>\n                </li><li>\n                  <em>2:47</em>\n                  <p>The name attribute is needed so that, when\na form is submitted to server-side</p>\n                </li><li>\n                  <em>2:53</em>\n                  <p>code, the server can understand the form\ndata and process the values appropriately.</p>\n                </li><li>\n                  <em>2:59</em>\n                  <p>We're going to prefix all of our name\nvalues with user and an underscore</p>\n                </li><li>\n                  <em>3:05</em>\n                  <p>so that it's easier to tell the difference\nbetween the name and the ID.</p>\n                </li><li>\n                  <em>3:09</em>\n                  <p>I should also point out that the\nsimilarity between the</p>\n                </li><li>\n                  <em>3:14</em>\n                  <p>attribute, name, and its value, user_name,\nor even</p>\n                </li><li>\n                  <em>3:19</em>\n                  <p>the value of the id, name is purely\ncoincidental.</p>\n                </li><li>\n                  <em>3:25</em>\n                  <p>In fact to avoid confusion, let's see what</p>\n                </li><li>\n                  <em>3:28</em>\n                  <p>a few other basic input elements look\nlike.</p>\n                </li><li>\n                  <em>3:32</em>\n                  <p>So I'm going to once again type input and\nfor the type attribute let's try email.</p>\n                </li><li>\n                  <em>3:41</em>\n                  <p>I'll give it the ID mail and then for the\nname attribute I'll say user email.</p>\n                </li><li>\n                  <em>3:53</em>\n                  <p>Then we can type in a password and put\ntype.</p>\n                </li><li>\n                  <em>3:56</em>\n                  <p>So I'll type input type=password</p>\n                </li><li>\n                  <em>4:02</em>\n                  <p>and then the id will also be password</p>\n                </li><li>\n                  <em>4:08</em>\n                  <p>and then, the name can be user password.</p>\n                </li><li>\n                  <em>4:16</em>\n                  <p>Let's refresh the page, and see what this\nlook like so far.</p>\n                </li><li>\n                  <em>4:21</em>\n                  <p>So, here I have 3 input elements.</p>\n                </li><li>\n                  <em>4:24</em>\n                  <p>The first one is for our name, the second\none is for an email address.</p>\n                </li><li>\n                  <em>4:30</em>\n                  <p>So I can type nick@sample.com, and then\nthe last one is a password.</p>\n                </li><li>\n                  <em>4:38</em>\n                  <p>So, if I start typing in this field,\nyou'll see</p>\n                </li><li>\n                  <em>4:41</em>\n                  <p>that it automatically blocks out the\npassword that I've typed in.</p>\n                </li><li>\n                  <em>4:46</em>\n                  <p>So using different values for the</p>\n                </li><li>\n                  <em>4:48</em>\n                  <p>type attribute will produce slightly\ndifferent results.</p>\n                </li><li>\n                  <em>4:53</em>\n                  <p>In fact, if we bring up our form on a\nmobile device, and we select the</p>\n                </li><li>\n                  <em>4:58</em>\n                  <p>different input elements, you'll notice\nthat, as I</p>\n                </li><li>\n                  <em>5:01</em>\n                  <p>go through each one, a different keyboard\nshows up.</p>\n                </li><li>\n                  <em>5:06</em>\n                  <p>So, for name, we have a normal keyboard.</p>\n                </li><li>\n                  <em>5:10</em>\n                  <p>For email, we get an email optimized\nkeyboard</p>\n                </li><li>\n                  <em>5:15</em>\n                  <p>and for password, we can even suggest a\npassword</p>\n                </li><li>\n                  <em>5:19</em>\n                  <p>on an iPhone and it will save to iCloud.</p>\n                </li><li>\n                  <em>5:21</em>\n                  <p>As I mentioned previously, there are many\nother values for the</p>\n                </li><p>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                </p><li>\n                  <em>5:26</em>\n                  <p>type attribute and we'll use the input\nelement again later on.</p><div id=\"video-meta\">\n      <div class=\"secondary-heading\">\n        <h1>The Button Element</h1>\n        <span id=\"video-duration\">2:06</span>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span>\n      </div>\n      <p>A form is not complete without a submit button. Once a user has\n finished filling out a form, they should be able to click a button that\n sends their data to the web server.</p></div></li><li><p>A form is not complete without a Submit\nbutton.</p>\n                </li><li>\n                  <em>0:03</em>\n                  <p>Once a user has finished filling out a\nform,</p>\n                </li><li>\n                  <em>0:06</em>\n                  <p>they should be able to click a button that</p>\n                </li><li>\n                  <em>0:08</em>\n                  <p>sends their data to the web server via the</p>\n                </li><li>\n                  <em>0:11</em>\n                  <p>action and method attributes we specified\nin the form element.</p>\n                </li><li>\n                  <em>0:15</em>\n                  <p>As I mentioned previously, it would take\nmore server</p>\n                </li><li>\n                  <em>0:18</em>\n                  <p>side code programming to make this form\nactually submit anywhere.</p>\n                </li><li>\n                  <em>0:22</em>\n                  <p>But it's still important to learn about\nthe HTML elements that make up a form.</p>\n                </li><li>\n                  <em>0:28</em>\n                  <p>One of those important form elements is\nthe Button element.</p>\n                </li><li>\n                  <em>0:32</em>\n                  <p>I'm going to type one out and then will\nexplain how it works.</p>\n                </li><li>\n                  <em>0:36</em>\n                  <p>Just below my text area here, I'm going to\ntype a Button element.</p>\n                </li><li>\n                  <em>0:42</em>\n                  <p>And I'm going to make it of type Submit.</p>\n                </li><li>\n                  <em>0:48</em>\n                  <p>And then it will automatically close my\nButton element if I'm using workspaces.</p>\n                </li><li>\n                  <em>0:54</em>\n                  <p>And inside of it, I can type Sign Up.</p>\n                </li><li>\n                  <em>0:58</em>\n                  <p>So let's save that out, switch over to the\nbrowser, and refresh the page.</p>\n                </li><li>\n                  <em>1:02</em>\n                  <p>And as you can see, we have a nicely\nstyled</p>\n                </li><li>\n                  <em>1:05</em>\n                  <p>button that we can click, and it will\nsubmit our form.</p>\n                </li><li>\n                  <em>1:10</em>\n                  <p>Of course in this particular case, we're\nnot</p>\n                </li><li>\n                  <em>1:11</em>\n                  <p>actually submitting anywhere so it won't\nquite work.</p>\n                </li><li>\n                  <em>1:15</em>\n                  <p>But that's generally what a button will\nlook like if it's styled.</p>\n                </li><li>\n                  <em>1:20</em>\n                  <p>Similar to the text area element, buttons\nare not self closing.</p>\n                </li><li>\n                  <em>1:24</em>\n                  <p>They require an opening and a closing tag.</p>\n                </li><li>\n                  <em>1:28</em>\n                  <p>The type attribute in this particular case\nis Submit.</p>\n                </li><li>\n                  <em>1:33</em>\n                  <p>But there are two other types called Reset\nand Button.</p>\n                </li><li>\n                  <em>1:39</em>\n                  <p>The Reset type will automatically clear\nall form data when it's clicked.</p>\n                </li><li>\n                  <em>1:43</em>\n                  <p>The Button type has no default behavior,\nand it's</p>\n                </li><li>\n                  <em>1:46</em>\n                  <p>mostly intended to be used in combination\nwith JavaScript.</p>\n                </li><li>\n                  <em>1:50</em>\n                  <p>The type we've used here is Submit.</p>\n                </li><li>\n                  <em>1:53</em>\n                  <p>The default behavior of the Submit type is\nto, as the name</p>\n                </li><li>\n                  <em>1:57</em>\n                  <p>implies, submit the form and send all the\ndata over to the server.</p>\n                </li><li>\n                  <em>2:01</em>\n                  <p>That`s it for buttons.</p>\n                </li><p>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                </p><li>\n                  <em>2:03</em>\n                  <p>Next up, we`ll learn how to organize our\nform.</p><p><br></p><div id=\"video-meta\">\n      <div class=\"secondary-heading\">\n        <h1>The Label Element</h1>\n        <span id=\"video-duration\">4:05</span>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span>\n      </div>\n      <p>Right now, itâs impossible for the user to tell what kind of \ninformation they should type into each form field. We can label form \ncontrols using the label element.</p></div></li><li><p>Our form has some nice CSS applied and</p>\n                </li><li>\n                  <em>0:07</em>\n                  <p>looks okay but it's still just a little\nbit messy.</p>\n                </li><li>\n                  <em>0:11</em>\n                  <p>Right now it's impossible for the user to\ntell which form control does what.</p>\n                </li><li>\n                  <em>0:15</em>\n                  <p>There's no way to know if the bio field is\nfor</p>\n                </li><li>\n                  <em>0:18</em>\n                  <p>their email or if the email field is for\ntheir password.</p>\n                </li><li>\n                  <em>0:22</em>\n                  <p>We can label each one of our form controls\nusing the label element.</p>\n                </li><li>\n                  <em>0:27</em>\n                  <p>Let's create some labels right now and\nlearn how they work.</p>\n                </li><li>\n                  <em>0:30</em>\n                  <p>I'm going to create a label and then I'll\nexplain it.</p>\n                </li><li>\n                  <em>0:34</em>\n                  <p>So if we hop into work space here our\nfirst</p>\n                </li><li>\n                  <em>0:40</em>\n                  <p>form field is for name, so lets add a\nlabel for that, I'm going to type label.</p>\n                </li><li>\n                  <em>0:48</em>\n                  <p>And as you can see, work spaces will\nautomatically close that element for me.</p>\n                </li><li>\n                  <em>0:52</em>\n                  <p>And then I'm going to add an attribute\ncalled for and</p>\n                </li><li>\n                  <em>0:57</em>\n                  <p>we'll say it's equal to name and then</p>\n                </li><li>\n                  <em>1:02</em>\n                  <p>inside of our label I'm going to type name\nfollowed by a colon.</p>\n                </li><li>\n                  <em>1:09</em>\n                  <p>So let's save that out, switch over to our\npreview, and refresh.</p>\n                </li><li>\n                  <em>1:16</em>\n                  <p>And as you can see we now have a name\nlabel for this form field and, if I click</p>\n                </li><li>\n                  <em>1:22</em>\n                  <p>on it, we'll automatically get focus on\nthis particular formed field.</p>\n                </li><li>\n                  <em>1:29</em>\n                  <p>One thing I should note here is that</p>\n                </li><li>\n                  <em>1:31</em>\n                  <p>I've added a colon, but that's not\nactually required.</p>\n                </li><li>\n                  <em>1:35</em>\n                  <p>You can format your label text however\nyou'd like.</p>\n                </li><li>\n                  <em>1:39</em>\n                  <p>So, how does this work?</p>\n                </li><li>\n                  <em>1:41</em>\n                  <p>Well, you'll notice that I've added a for\nattribute to our label.</p>\n                </li><li>\n                  <em>1:46</em>\n                  <p>This attribute associates the label with a\nparticular form element.</p>\n                </li><li>\n                  <em>1:52</em>\n                  <p>The way it matches is by ID.</p>\n                </li><li>\n                  <em>1:55</em>\n                  <p>So, if there's an element on the page with\nthe same value in its ID</p>\n                </li><li>\n                  <em>2:01</em>\n                  <p>attribute, like we have right here, as the\nvalue that's in the for attribute.</p>\n                </li><li>\n                  <em>2:08</em>\n                  <p>As we have right here it will be matched.</p>\n                </li><li>\n                  <em>2:11</em>\n                  <p>So, what it is mean for an element to be\nmatched to its label.</p>\n                </li><li>\n                  <em>2:16</em>\n                  <p>Well, when I click on the label, like I\nshowed you previously we'll</p>\n                </li><li>\n                  <em>2:19</em>\n                  <p>automatically get focus but what if we\ndidn't have that for attribute there.</p>\n                </li><li>\n                  <em>2:26</em>\n                  <p>We'll just remove that, save and refresh\nand now if I</p>\n                </li><li>\n                  <em>2:32</em>\n                  <p>click on the name, it won't actually give\nme focus to this element.</p>\n                </li><li>\n                  <em>2:39</em>\n                  <p>However, if we do have the four attribute\nthere,</p>\n                </li><li>\n                  <em>2:44</em>\n                  <p>we'll get that behaviour back.</p>\n                </li><li>\n                  <em>2:47</em>\n                  <p>So let's add a few more labels for our\nother form controls.</p>\n                </li><li>\n                  <em>2:52</em>\n                  <p>I'm going to add a label for the email\nfield.</p>\n                </li><li>\n                  <em>3:00</em>\n                  <p>So I'll type in email and then I'll add\none for password.</p>\n                </li><li>\n                  <em>3:05</em>\n                  <p>Say, label for=password and again, I'm\nmaking sure that I match.</p>\n                </li><li>\n                  <em>3:12</em>\n                  <p>The IDs with the for attributes.</p>\n                </li><li>\n                  <em>3:17</em>\n                  <p>So, we'll type in password there and then\nfinally</p>\n                </li><li>\n                  <em>3:21</em>\n                  <p>let's type in a label for our bio field.</p>\n                </li><li>\n                  <em>3:26</em>\n                  <p>So the ID is bi and we'll say, Biography.</p>\n                </li><li>\n                  <em>3:32</em>\n                  <p>Let's</p>\n                </li><li>\n                  <em>3:34</em>\n                  <p>make some space between each one of these,\njust</p>\n                </li><li>\n                  <em>3:37</em>\n                  <p>so we can see more clearly what's going\non.</p>\n                </li><li>\n                  <em>3:40</em>\n                  <p>I'll save that, switch back to our\npreview, and refresh the page.</p>\n                </li><li>\n                  <em>3:45</em>\n                  <p>And let's just click around on each one of\nthese</p>\n                </li><li>\n                  <em>3:48</em>\n                  <p>to make sure that it gives focus to the\nproper element.</p>\n                </li><li>\n                  <em>3:52</em>\n                  <p>Yep, it looks like everything's working\njust like we expect and that looks good.</p>\n                </li><li>\n                  <em>3:59</em>\n                  <p>Now the user can tell what kind of</p>\n                </li><p>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                </p><li>\n                  <em>4:01</em>\n                  <p>information they should put into each form\nfield.</p><p><br></p></li></div></div><div id=\"video-meta\">\n      <div class=\"secondary-heading\">\n        <h1>Select Menus</h1>\n        <span id=\"video-duration\">6:40</span>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/nickpettit\">Nick Pettit</a></span>\n      </div>\n      <p>A text input isn't ideal for every situation. The select \nelement can be used in cases where the user should pick from a set of \npredefined options.</p><li><p>Sometimes, when you're creating a form,\nyou don't want</p>\n                </li><li>\n                  <em>0:07</em>\n                  <p>the user to be able to type in text.</p>\n                </li><li>\n                  <em>0:10</em>\n                  <p>Rather, you might want them to pick from\nsome preset options that you define.</p>\n                </li><li>\n                  <em>0:15</em>\n                  <p>Let's say that our imaginary web app is\ntargeted</p>\n                </li><li>\n                  <em>0:18</em>\n                  <p>at people like you, that are students of\ntechnology.</p>\n                </li><li>\n                  <em>0:21</em>\n                  <p>We want to allow people to select from a\npredefined list of job roles.</p>\n                </li><li>\n                  <em>0:27</em>\n                  <p>We're going to have a lot of job roles to</p>\n                </li><li>\n                  <em>0:29</em>\n                  <p>chose from, so any time that you have a\nlist of</p>\n                </li><li>\n                  <em>0:32</em>\n                  <p>options that's longer than, say, four or\nfive things, it's</p>\n                </li><li>\n                  <em>0:36</em>\n                  <p>best to go with a select menu because it\nsaves space.</p>\n                </li><li>\n                  <em>0:40</em>\n                  <p>So, let's take a look at that in code.</p>\n                </li><li>\n                  <em>0:43</em>\n                  <p>So let's scroll down here, and just under\nthe biography, I'll make some</p>\n                </li><li>\n                  <em>0:50</em>\n                  <p>space, and, let's first type a label, and\nI'll say this is a label for.</p>\n                </li><li>\n                  <em>0:58</em>\n                  <p>[BLANK_AUDIO]</p>\n                </li><li>\n                  <em>1:00</em>\n                  <p>Job.</p>\n                </li><li>\n                  <em>1:02</em>\n                  <p>And inside of this label, I'll say, Job\nrole.</p>\n                </li><li>\n                  <em>1:08</em>\n                  <p>And then after that, I'll type a select\nelement, and I'll give</p>\n                </li><li>\n                  <em>1:14</em>\n                  <p>it an id of job because we want that to\nmatch the label.</p>\n                </li><li>\n                  <em>1:19</em>\n                  <p>I'll give it a name of user_job and then\nI'll close the select element.</p>\n                </li><li>\n                  <em>1:27</em>\n                  <p>Now, by itself, the select element won't\ndo anything.</p>\n                </li><li>\n                  <em>1:30</em>\n                  <p>This form element actually needs\nadditional elements inside</p>\n                </li><li>\n                  <em>1:33</em>\n                  <p>of it, exactly like an unordered list\nelement.</p>\n                </li><li>\n                  <em>1:37</em>\n                  <p>The elements we put inside are called\noption elements,</p>\n                </li><li>\n                  <em>1:40</em>\n                  <p>so let's type up some options to choose\nfrom.</p>\n                </li><li>\n                  <em>1:45</em>\n                  <p>So first, type the option element, and\nI'll give it a value of</p>\n                </li><li>\n                  <em>1:51</em>\n                  <p>frontend_developer.</p>\n                </li><li>\n                  <em>1:57</em>\n                  <p>And then inside of the two option tags,\nwe'll type that out.</p>\n                </li><li>\n                  <em>2:02</em>\n                  <p>We'll say Front-End Developer and I'll\njust copy</p>\n                </li><li>\n                  <em>2:08</em>\n                  <p>and paste this a few times because we're\njust going to change the values here.</p>\n                </li><li>\n                  <em>2:13</em>\n                  <p>So instead of frontend_developer let's say\nsomething like php_developer, and</p>\n                </li><li>\n                  <em>2:19</em>\n                  <p>then we'll say, python_developer, and we\ncan change these here as well.</p>\n                </li><li>\n                  <em>2:24</em>\n                  <p>So we'll say PHP Developer and Python\nDeveloper.</p>\n                </li><li>\n                  <em>2:30</em>\n                  <p>And, I've typed a few options here and\nwe're going to type</p>\n                </li><li>\n                  <em>2:33</em>\n                  <p>several more, but you've probably noticed\nthat I'm using an attribute called value.</p>\n                </li><li>\n                  <em>2:39</em>\n                  <p>Now, normally when you submit a form to</p>\n                </li><li>\n                  <em>2:44</em>\n                  <p>server side code, each form element has an\nassociated</p>\n                </li><li>\n                  <em>2:47</em>\n                  <p>value for text inputs and text areas, that\nvalue</p>\n                </li><li>\n                  <em>2:51</em>\n                  <p>is whatever the user types in to the\nfield.</p>\n                </li><li>\n                  <em>2:54</em>\n                  <p>However, since we're creating these\npredefined options, we need to</p>\n                </li><li>\n                  <em>2:58</em>\n                  <p>specify what the value should look like\nwhen it's submitted.</p>\n                </li><li>\n                  <em>3:02</em>\n                  <p>So, let's type up several more options.</p>\n                </li><li>\n                  <em>3:07</em>\n                  <p>So, I'll just paste that a few more times\nand let's say rails_developer</p>\n                </li><li>\n                  <em>3:15</em>\n                  <p>and we'll come back and change all of the\ndescription between the option tags.</p>\n                </li><li>\n                  <em>3:20</em>\n                  <p>So, we'll say rails_developer.</p>\n                </li><li>\n                  <em>3:23</em>\n                  <p>I'll say web_designer, and let's add\nanother one.</p>\n                </li><li>\n                  <em>3:30</em>\n                  <p>I'll say wordpress_developer, and I want\nto add a</p>\n                </li><li>\n                  <em>3:36</em>\n                  <p>few mobile roles here, so we'll say,</p>\n                </li><li>\n                  <em>3:41</em>\n                  <p>android_developer, ios_developer,</p>\n                </li><li>\n                  <em>3:47</em>\n                  <p>and then mobile_designer.</p>\n                </li><li>\n                  <em>3:52</em>\n                  <p>And then let's add two more for business\nand we'll say</p>\n                </li><li>\n                  <em>3:56</em>\n                  <p>business_owner and freelancer.</p>\n                </li><li>\n                  <em>4:03</em>\n                  <p>So now we need to change all of the\ndescriptions</p>\n                </li><li>\n                  <em>4:08</em>\n                  <p>between here, so for rails_developer we'll\nsay, Rails Developer.</p>\n                </li><li>\n                  <em>4:13</em>\n                  <p>For web_designer, we'll say Web Designer.</p>\n                </li><li>\n                  <em>4:19</em>\n                  <p>We'll do WordPress, Android, iOS, and then\nMobile Designer,</p>\n                </li><li>\n                  <em>4:31</em>\n                  <p>and then Business Owner, and then finally,\nFreelancer,</p>\n                </li><li>\n                  <em>4:40</em>\n                  <p>so we'll save that out.</p>\n                </li><li>\n                  <em>4:42</em>\n                  <p>Switch over to our form and refresh, and\nif we scroll down here, you can see that</p>\n                </li><li>\n                  <em>4:47</em>\n                  <p>we now have this job role label along with\nthe select menu that we just created.</p>\n                </li><li>\n                  <em>4:54</em>\n                  <p>And this is a good start, but this list is\na little bit difficult to read quickly.</p>\n                </li><li>\n                  <em>5:00</em>\n                  <p>We can organize our list into logical\ngroups with the optgroup element.</p>\n                </li><li>\n                  <em>5:05</em>\n                  <p>So lets try to organize this list.</p>\n                </li><li>\n                  <em>5:07</em>\n                  <p>We'll switch back, and first, going to add</p>\n                </li><li>\n                  <em>5:13</em>\n                  <p>an optgroup element and I'll use the label</p>\n                </li><li>\n                  <em>5:18</em>\n                  <p>attribute, not the label element and we'll\nsay Web.</p>\n                </li><li>\n                  <em>5:26</em>\n                  <p>So this will have an associated closing\ntag and we want to</p>\n                </li><li>\n                  <em>5:31</em>\n                  <p>wrap all of the web job roles, so let's do\nthat, and we'll indent all of these.</p>\n                </li><li>\n                  <em>5:39</em>\n                  <p>We want another optgroup, and this time\nthe label will</p>\n                </li><li>\n                  <em>5:43</em>\n                  <p>be, Mobile, and we'll wrap all of the\nmobile job roles,</p>\n                </li><li>\n                  <em>5:50</em>\n                  <p>and then indent these.</p>\n                </li><li>\n                  <em>5:51</em>\n                  <p>And then finally, we'll have an optgroup\nfor business.</p>\n                </li><li>\n                  <em>5:57</em>\n                  <p>[SOUND] So let's close that and</p>\n                </li><li>\n                  <em>6:03</em>\n                  <p>then indent both of these.</p>\n                </li><li>\n                  <em>6:09</em>\n                  <p>There we go.</p>\n                </li><li>\n                  <em>6:10</em>\n                  <p>So now if I save that out and switch that\nback to the browser and refresh, you</p>\n                </li><li>\n                  <em>6:16</em>\n                  <p>can see that the label attribute we used\non</p>\n                </li><li>\n                  <em>6:19</em>\n                  <p>our optgroup or option groups has been\napplied here.</p>\n                </li><li>\n                  <em>6:23</em>\n                  <p>However, those option groups are not\nselectable.</p>\n                </li><li>\n                  <em>6:29</em>\n                  <p>We just have the various options grouped\nunderneath each optgroup.</p>\n                </li><li>\n                  <em>6:34</em>\n                  <p>That's about it for the select element.</p>\n                </li><p>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                </p><li>\n                  <em>6:37</em>\n                  <p>Next, we'll learn about radio buttons.</p><p><br></p></li></div><h1>:nth-child</h1>\n        <span id=\"video-authors\">with <a href=\"https://teamtreehouse.com/guil\">Guil Hernandez</a></span><div style=\"font-size: 17px;\"><br></div><div style=\"font-size: 17px;\"><li><p>Earlier, we learned how to target first\nand\n</p>\n                </li>\n                <li>\n                  <em>0:07</em>\n                  <p>last child elements, with structural\npseudo-classes.\n</p>\n                </li>\n                <li>\n                  <em>0:09</em>\n                  <p>Next, we'll see how the nth-child\npseudo-class,\n</p>\n                </li>\n                <li>\n                  <em>0:12</em>\n                  <p>can target any combination of child\nelements.\n</p>\n                </li>\n                <li>\n                  <em>0:15</em>\n                  <p>Nth-child is a useful and powerful\nstructural pseudo-class,\n</p>\n                </li>\n                <li>\n                  <em>0:18</em>\n                  <p>because it can target elements based on\nany position, within a parent element.\n</p>\n                </li>\n                <li>\n                  <em>0:22</em>\n                  <p>And unlike the first and last child\npseudo-classes which only target first and\n</p>\n                </li>\n                <li>\n                  <em>0:26</em>\n                  <p>last child elements, we can target any\nchild element, or\n</p>\n                </li>\n                <li>\n                  <em>0:29</em>\n                  <p>any combination, of child elements.\n</p>\n                </li>\n                <li>\n                  <em>0:32</em>\n                  <p>So, we're going to revisit the simple list\nfrom the previous stage,\n</p>\n                </li>\n                <li>\n                  <em>0:35</em>\n                  <p>to see how we're able to do that.\n</p>\n                </li>\n                <li>\n                  <em>0:37</em>\n                  <p>And again, we're not gonna add any class\nor ID hooks to our elements.\n</p>\n                </li>\n                <li>\n                  <em>0:41</em>\n                  <p>These will be targeted dynamically, based\non where they're positioned,\n</p>\n                </li>\n                <li>\n                  <em>0:45</em>\n                  <p>in the unordered list.\n</p>\n                </li>\n                <li>\n                  <em>0:46</em>\n                  <p>So, first, let's go over to our style.css\nfile.\n</p>\n                </li>\n                <li>\n                  <em>0:50</em>\n                  <p>And we're going to create our nth-child\nselector,\n</p>\n                </li>\n                <li>\n                  <em>0:53</em>\n                  <p>by first targeting list items with li.\n</p>\n                </li>\n                <li>\n                  <em>0:56</em>\n                  <p>Then we're gonna type a colon, followed by\nnth-child, and a set of parentheses.\n</p>\n                </li>\n                <li>\n                  <em>1:03</em>\n                  <p>Make sure there aren't any spaces, in our\nselector.\n</p>\n                </li>\n                <li>\n                  <em>1:06</em>\n                  <p>So, nth-child uses a function-like syntax,\n</p>\n                </li>\n                <li>\n                  <em>1:10</em>\n                  <p>that allows us to pass a value, in between\nthe parentheses.\n</p>\n                </li>\n                <li>\n                  <em>1:14</em>\n                  <p>And that value is referred to as an\nargument.\n</p>\n                </li>\n                <li>\n                  <em>1:17</em>\n                  <p>Don't worry, we're not really arguing with\nour CSS,\n</p>\n                </li>\n                <li>\n                  <em>1:19</em>\n                  <p>because that would be kind of mean.\n</p>\n                </li>\n                <li>\n                  <em>1:21</em>\n                  <p>Just think of it as a value we're passing,\n</p>\n                </li>\n                <li>\n                  <em>1:23</em>\n                  <p>to tell the selector, what elements to\ntarget.\n</p>\n                </li>\n                <li>\n                  <em>1:26</em>\n                  <p>So, now inside these parentheses,\n</p>\n                </li>\n                <li>\n                  <em>1:28</em>\n                  <p>we're gonna declare how the element will\nbe selected.\n</p>\n                </li>\n                <li>\n                  <em>1:31</em>\n                  <p>Now one of the arguments we can pass, is\nthe keyword, odd or even.\n</p>\n                </li>\n                <li>\n                  <em>1:36</em>\n                  <p>And what they do is, they select every\nother child element, based on an odd or\n</p>\n                </li>\n                <li>\n                  <em>1:40</em>\n                  <p>even position.\n</p>\n                </li>\n                <li>\n                  <em>1:41</em>\n                  <p>So, if we type even, as our argument,\n</p>\n                </li>\n                <li>\n                  <em>1:44</em>\n                  <p>we're specifying that we wanna target the\neven numbered list items.\n</p>\n                </li>\n                <li>\n                  <em>1:49</em>\n                  <p>So, the second, fourth, sixth, eighth, and\nso forth.\n</p>\n                </li>\n                <li>\n                  <em>1:52</em>\n                  <p>So, let's go back to our style sheet,\n</p>\n                </li>\n                <li>\n                  <em>1:54</em>\n                  <p>and we're gonna add some CSS properties in\nour nth-child rule.\n</p>\n                </li>\n                <li>\n                  <em>1:57</em>\n                  <p>So, first, let's add a background\nproperty.\n</p>\n                </li>\n                <li>\n                  <em>2:00</em>\n                  <p>And let's set the background color to\npound 52bab3,\n</p>\n                </li>\n                <li>\n                  <em>2:05</em>\n                  <p>our favorite aqua green color, in this\ncourse.\n</p>\n                </li>\n                <li>\n                  <em>2:09</em>\n                  <p>And let's set the color value, to white.\n</p>\n                </li>\n                <li>\n                  <em>2:13</em>\n                  <p>All right, so we'll save our style sheet,\nand when we take a look at the preview and\n</p>\n                </li>\n                <li>\n                  <em>2:17</em>\n                  <p>refresh, notice how the browser only\ntargets those even list items,\n</p>\n                </li>\n                <li>\n                  <em>2:21</em>\n                  <p>starting from the second one.\n</p>\n                </li>\n                <li>\n                  <em>2:23</em>\n                  <p>Then it goes on and targets the fourth,\nsixth, eighth and tenth.\n</p>\n                </li>\n                <li>\n                  <em>2:27</em>\n                  <p>Now, if we go back and change our\nargument, from even to odd,\n</p>\n                </li>\n                <li>\n                  <em>2:34</em>\n                  <p>when we take a look at it once again, now\nit targets the odd numbered list items,\n</p>\n                </li>\n                <li>\n                  <em>2:38</em>\n                  <p>starting with the first list item, then\nevery other one.\n</p>\n                </li>\n                <li>\n                  <em>2:42</em>\n                  <p>But it doesn't stop there.\n</p>\n                </li>\n                <li>\n                  <em>2:44</em>\n                  <p>So, this is where it gets really cool,\nbecause we're also able to use an integer,\n</p>\n                </li>\n                <li>\n                  <em>2:48</em>\n                  <p>as an argument, to target a particular\nchild.\n</p>\n                </li>\n                <li>\n                  <em>2:51</em>\n                  <p>When calculating the position of an\nelement,\n</p>\n                </li>\n                <li>\n                  <em>2:53</em>\n                  <p>inside its parent, the index numbering\nstarts at one.\n</p>\n                </li>\n                <li>\n                  <em>2:57</em>\n                  <p>So, for example, if we go back and pass\nthree, as our argument.\n</p>\n                </li>\n                <li>\n                  <em>3:03</em>\n                  <p>Once we save and refresh the browser,\nnotice how\n</p>\n                </li>\n                <li>\n                  <em>3:06</em>\n                  <p>the browser targets the third list item,\ninside the parent unordered list.\n</p>\n                </li>\n                <li>\n                  <em>3:11</em>\n                  <p>Now, if we go back and replace it with\nsay, seven, well, now,\n</p>\n                </li>\n                <li>\n                  <em>3:15</em>\n                  <p>we can see that the seventh child is\nselected, and so on.\n</p>\n                </li>\n                <li>\n                  <em>3:20</em>\n                  <p>But there's actually a lot more we can do.\n</p>\n                </li>\n                <li>\n                  <em>3:22</em>\n                  <p>What makes nth-child really powerful,\n</p>\n                </li>\n                <li>\n                  <em>3:25</em>\n                  <p>is when we use expressions to select a\nparticular combination of child elements.\n</p>\n                </li>\n                <li>\n                  <em>3:29</em>\n                  <p>Now, expressions may appear a little more\ncomplex.\n</p>\n                </li>\n                <li>\n                  <em>3:32</em>\n                  <p>But, as we'll soon learn, they're not so\n</p>\n                </li>\n                <li>\n                  <em>3:34</em>\n                  <p>bad once we start experimenting with the\nvalues.\n</p>\n                </li>\n                <li>\n                  <em>3:37</em>\n                  <p>So, our basic expression syntax, looks\nsomething like this.\n</p>\n                </li>\n                <li>\n                  <em>3:40</em>\n                  <p>An plus b, now let's go over these values\nmean.\n</p>\n                </li>\n                <li>\n                  <em>3:45</em>\n                  <p>So, the values a and b, are always\nrepresented by numbers.\n</p>\n                </li>\n                <li>\n                  <em>3:51</em>\n                  <p>And the n value, never changes.\n</p>\n                </li>\n                <li>\n                  <em>3:53</em>\n                  <p>It's always the letter n.\n</p>\n                </li>\n                <li>\n                  <em>3:55</em>\n                  <p>So, starting from the right, the b value\nhere, is an offset value we use,\n</p>\n                </li>\n                <li>\n                  <em>4:01</em>\n                  <p>to tell the browser the first element we\nwant to select.\n</p>\n                </li>\n                <li>\n                  <em>4:04</em>\n                  <p>So, if we make this value three, this\nmeans that the third list item,\n</p>\n                </li>\n                <li>\n                  <em>4:08</em>\n                  <p>will be the first one selected in our\nlist, and\n</p>\n                </li>\n                <li>\n                  <em>4:10</em>\n                  <p>it's gonna ignore all sibling list items\nthat come before it.\n</p>\n                </li>\n                <li>\n                  <em>4:14</em>\n                  <p>Then, the a value, tells the browser the\ncycle of elements to select,\n</p>\n                </li>\n                <li>\n                  <em>4:19</em>\n                  <p>after that first one's selected.\n</p>\n                </li>\n                <li>\n                  <em>4:21</em>\n                  <p>So, if we make the a value two, this means\nthat the third list item,\n</p>\n                </li>\n                <li>\n                  <em>4:26</em>\n                  <p>will be selected first.\n</p>\n                </li>\n                <li>\n                  <em>4:28</em>\n                  <p>Then it will select every second list item\nafter that.\n</p>\n                </li>\n                <li>\n                  <em>4:32</em>\n                  <p>And as I mentioned, the end value doesn't\nchange in an expression.\n</p>\n                </li>\n                <li>\n                  <em>4:36</em>\n                  <p>We can think of n as a counter,\n</p>\n                </li>\n                <li>\n                  <em>4:38</em>\n                  <p>that indicates the a cycle value to the\nbrowser.\n</p>\n                </li>\n                <li>\n                  <em>4:42</em>\n                  <p>So, in this expression, the n value will\ntell the browser to\n</p>\n                </li>\n                <li>\n                  <em>4:45</em>\n                  <p>select every second list item, starting\nfrom the third one in a list.\n</p>\n                </li>\n                <li>\n                  <em>4:50</em>\n                  <p>All right?\nSo, let's take a look.\n</p>\n                </li>\n                <li>\n                  <em>4:51</em>\n                  <p>So, we'll save our style sheet, and when\nwe take a look at the list in the browser,\n</p>\n                </li>\n                <li>\n                  <em>4:56</em>\n                  <p>we can see that the first list item\nselected, is the third one.\n</p>\n                </li>\n                <li>\n                  <em>5:01</em>\n                  <p>And this was determined by our e value\nhere,\n</p>\n                </li>\n                <li>\n                  <em>5:04</em>\n                  <p>then it selects every second list item, as\nindicated by the a value,\n</p>\n                </li>\n                <li>\n                  <em>5:08</em>\n                  <p>until there are no more list items to\nselect in our list.\n</p>\n                </li>\n                <li>\n                  <em>5:12</em>\n                  <p>Now, if you go back and change our\nexpression to something like 3n plus 4,\n</p>\n                </li>\n                <li>\n                  <em>5:19</em>\n                  <p>this means that the browser will target\nthe fourth list item first,\n</p>\n                </li>\n                <li>\n                  <em>5:23</em>\n                  <p>then every third one after that.\n</p>\n                </li>\n                <li>\n                  <em>5:26</em>\n                  <p>So, when we take a look at it once again,\nnow we see the fourth list item,\n</p>\n                </li>\n                <li>\n                  <em>5:30</em>\n                  <p>selected first, then every third one.\n</p>\n                </li>\n                <li>\n                  <em>5:34</em>\n                  <p>Cool.\n</p>\n                </li>\n                <li>\n                  <em>5:35</em>\n                  <p>Now, there are a couple things we can do\nto shorten and\n</p>\n                </li>\n                <li>\n                  <em>5:38</em>\n                  <p>simplify our nth child expressions.\n</p>\n                </li>\n                <li>\n                  <em>5:40</em>\n                  <p>So, first, if our a value here is one, as\nin, 1n plus 4,\n</p>\n                </li>\n                <li>\n                  <em>5:45</em>\n                  <p>we can actually omit the a value, because\nit's the same as n plus 4.\n</p>\n                </li>\n                <li>\n                  <em>5:52</em>\n                  <p>And as we can see,\n</p>\n                </li>\n                <li>\n                  <em>5:53</em>\n                  <p>this one targets the fourth list item\nfirst, then every other one after that.\n</p>\n                </li>\n                <li>\n                  <em>5:58</em>\n                  <p>Now, also, if the b value in our\nexpression is a zero,\n</p>\n                </li>\n                <li>\n                  <em>6:03</em>\n                  <p>as in 3n plus 0, then we can omit\n</p>\n                </li>\n                <li>\n                  <em>6:09</em>\n                  <p>the zero from our expression, as it's the\nsame as using the value, 3n.\n</p>\n                </li>\n                <li>\n                  <em>6:14</em>\n                  <p>And what this does is select every other\nthird child,\n</p>\n                </li>\n                <li>\n                  <em>6:18</em>\n                  <p>starting from the third one from the top.\n</p>\n                </li>\n                <li>\n                  <em>6:21</em>\n                  <p>Now, if the a and b values are the same,\nso for instance,\n</p>\n                </li>\n                <li>\n                  <em>6:24</em>\n                  <p>if our expression is 3n plus 3, then we\ncan omit the b value,\n</p>\n                </li>\n                <li>\n                  <em>6:29</em>\n                  <p>because it's also the same as using 3n in\nour expression.\n</p>\n                </li>\n                <li>\n                  <em>6:35</em>\n                  <p>Now finally, we're also able to use\nnegative values in our expressions, and\n</p>\n                </li>\n                <li>\n                  <em>6:39</em>\n                  <p>negative expressions come in handy,\n</p>\n                </li>\n                <li>\n                  <em>6:41</em>\n                  <p>when we need to select the first few items\nin a list.\n</p>\n                </li>\n                <li>\n                  <em>6:45</em>\n                  <p>So, for example, say the first three items\nin our list here, are featured items.\n</p>\n                </li>\n                <li>\n                  <em>6:51</em>\n                  <p>And we'll always need to target and style\nthem, a certain way.\n</p>\n                </li>\n                <li>\n                  <em>6:54</em>\n                  <p>Well, to do that, we can use the\nexpression, negative n, plus 3.\n</p>\n                </li>\n                <li>\n                  <em>7:02</em>\n                  <p>So, let's try to figure out what's about\nto happen here.\n</p>\n                </li>\n                <li>\n                  <em>7:05</em>\n                  <p>We know that it's going to target the\nthird list item first,\n</p>\n                </li>\n                <li>\n                  <em>7:09</em>\n                  <p>as indicated by the b value.\n</p>\n                </li>\n                <li>\n                  <em>7:11</em>\n                  <p>And now we know that the n value by\nitself, is the same as using 1n.\n</p>\n                </li>\n                <li>\n                  <em>7:18</em>\n                  <p>So, I'm gonna say that with the negative\nvalue here,\n</p>\n                </li>\n                <li>\n                  <em>7:21</em>\n                  <p>instead of targeting every child element\nthat follows the third child,\n</p>\n                </li>\n                <li>\n                  <em>7:25</em>\n                  <p>it's gonna target every child element that\nprecedes it.\n</p>\n                </li>\n                <li>\n                  <em>7:28</em>\n                  <p>So, let's take a look.\n</p>\n                </li>\n                <li>\n                  <em>7:29</em>\n                  <p>Save the style sheet.\n</p>\n                </li>\n                <li>\n                  <em>7:30</em>\n                  <p>And when we refresh the browser, great.\n</p>\n                </li>\n                <li>\n                  <em>7:33</em>\n                  <p>As we can see, with that negative value,\n</p>\n                </li>\n                <li>\n                  <em>7:35</em>\n                  <p>it is selecting the third list item first,\nthen all the list items before it.\n</p>\n                </li>\n                <li>\n                  <em>7:40</em>\n                  <p>Now, if you go back and use, say, negative\nn plus 4, now it targets\n</p>\n                </li>\n                <li>\n                  <em>7:46</em>\n                  <p>the fourth list item first, and every one\nthat precedes it, so the top four items.\n</p>\n                </li>\n                <li>\n                  <em>7:52</em>\n                  <p>Coming up next, we're gonna take a quick\ncode challenge, where you'll see\n</p>\n                </li>\n                <li>\n                  <em>7:55</em>\n                  <p>a good use case for using the nth-child\npseudo-class, with floated elements.</p><p>8:00Tut.time.length&nbsp;</p></li></div><div style=\"font-size: 17px;\">:only-child and :empty</div><div style=\"font-size: 17px;\">with Guil Hernandez&nbsp;</div><div><li><p>Besides being able to target first ,and\nlast, child elements, with the first and</p>\n                </li>\n                <li>\n                  <em>0:04</em>\n                  <p>last child pseudo classes, we used in the\nprevious lesson, the browser can</p>\n                </li>\n                <li>\n                  <em>0:08</em>\n                  <p>also target, only child elements, and\nempty elements, that have no content.</p>\n                </li>\n                <li>\n                  <em>0:13</em>\n                  <p>So let's explore some of the other\nstructural pseudo classes,so first up,</p>\n                </li>\n                <li>\n                  <em>0:18</em>\n                  <p>with the only child, pseudo class ,we can\ntarget an element,</p>\n                </li>\n                <li>\n                  <em>0:21</em>\n                  <p>if it's the only child of a parent.</p>\n                </li>\n                <li>\n                  <em>0:24</em>\n                  <p>So let's go back to our work space, and in\nour style that's css file,</p>\n                </li>\n                <li>\n                  <em>0:31</em>\n                  <p>right below the last-child selector, let's\nwrite,</p>\n                </li>\n                <li>\n                  <em>0:36</em>\n                  <p>an only child selector, by typing colon\nfollowed by only-child.</p>\n                </li>\n                <li>\n                  <em>0:42</em>\n                  <p>Then we're gonna write a color property,\nand set the value to pound</p>\n                </li>\n                <li>\n                  <em>0:46</em>\n                  <p>#52bab3 and we're gonna follow that with</p>\n                </li>\n                <li>\n                  <em>0:52</em>\n                  <p>a font size property, where we'll set the\nvalue to 1.5 m.</p>\n                </li>\n                <li>\n                  <em>0:58</em>\n                  <p>So let's save our stop sheet, and go back\nto the browser, and once we</p>\n                </li>\n                <li>\n                  <em>1:03</em>\n                  <p>refresh the page, notice how that selector\ntargets the entire unordered list,</p>\n                </li>\n                <li>\n                  <em>1:08</em>\n                  <p>because as we can see here in our\nindex.html file,</p>\n                </li>\n                <li>\n                  <em>1:12</em>\n                  <p>the UL element is the only child of the\nbody element.</p>\n                </li>\n                <li>\n                  <em>1:18</em>\n                  <p>But if you go back and add another element\nto the body,so for example,</p>\n                </li>\n                <li>\n                  <em>1:23</em>\n                  <p>right above the UL let's add an h1 element\nthat reads, my list of items.</p>\n                </li>\n                <li>\n                  <em>1:33</em>\n                  <p>When we save our HTML file, and refresh\nthe browser,</p>\n                </li>\n                <li>\n                  <em>1:36</em>\n                  <p>notice how the only-child selector no\nlonger targets the unordered list,</p>\n                </li>\n                <li>\n                  <em>1:41</em>\n                  <p>because now it's no longer the only-child\nof the body element.</p>\n                </li>\n                <li>\n                  <em>1:45</em>\n                  <p>The h1 is now a sibling of the UL,</p>\n                </li>\n                <li>\n                  <em>1:49</em>\n                  <p>but now if there's ever another element on\nthe page that does not have any siblings,</p>\n                </li>\n                <li>\n                  <em>1:54</em>\n                  <p>it will take on the styles and this\nonly-child rule.</p>\n                </li>\n                <li>\n                  <em>1:58</em>\n                  <p>So for instance, let's go back,to our\nunordered list, and</p>\n                </li>\n                <li>\n                  <em>2:02</em>\n                  <p>let's add a span element to a second list\nitem.</p>\n                </li>\n                <li>\n                  <em>2:06</em>\n                  <p>So right after the Item 2 text let's nest\na span element, and this span element,</p>\n                </li>\n                <li>\n                  <em>2:12</em>\n                  <p>will contain an HTML character entity that\nwill display a check mark.</p>\n                </li>\n                <li>\n                  <em>2:16</em>\n                  <p>So let's type ampersand, followed by the\nword check, and a semicolon, and let's go</p>\n                </li>\n                <li>\n                  <em>2:21</em>\n                  <p>ahead and copy the span element, and let's\nnest it inside another list item.</p>\n                </li>\n                <li>\n                  <em>2:25</em>\n                  <p>Let's say, Item 6, so let's go ahead and</p>\n                </li>\n                <li>\n                  <em>2:28</em>\n                  <p>copy and paste it in that, and now let's\nsave our HTML file.</p>\n                </li>\n                <li>\n                  <em>2:32</em>\n                  <p>And back in the browser, when we refresh\nthe page, we can see how the browser</p>\n                </li>\n                <li>\n                  <em>2:38</em>\n                  <p>targets the only-child span elements, we\nhad just added inside those list items.</p>\n                </li>\n                <li>\n                  <em>2:43</em>\n                  <p>Because, as we can see here, they have no\nsibling elements,</p>\n                </li>\n                <li>\n                  <em>2:47</em>\n                  <p>they're the only-child inside their parent\nlist item.</p>\n                </li>\n                <li>\n                  <em>2:51</em>\n                  <p>Now, to make our only child pseudo classes\nmore specific, we can include</p>\n                </li>\n                <li>\n                  <em>2:55</em>\n                  <p>the element type we wanna target, so for\nexample,to target just the span elements,</p>\n                </li>\n                <li>\n                  <em>3:01</em>\n                  <p>that are an only child, we can add the\nspan type selector to our pseudo class.</p>\n                </li>\n                <li>\n                  <em>3:07</em>\n                  <p>And as we can see, this works exactly the\nsame way.</p>\n                </li>\n                <li>\n                  <em>3:10</em>\n                  <p>Now, it's just a lot more specific, so,\nnext if we need to target elements,</p>\n                </li>\n                <li>\n                  <em>3:14</em>\n                  <p>that have no child elements, or content\nwhat so ever, we can use</p>\n                </li>\n                <li>\n                  <em>3:18</em>\n                  <p>the empty structural pseudo class, to do\njust that, target an empty element.</p>\n                </li>\n                <li>\n                  <em>3:23</em>\n                  <p>So back in our style.css file,</p>\n                </li>\n                <li>\n                  <em>3:26</em>\n                  <p>let's create a new rule at the bottom of\nour file, and this time,</p>\n                </li>\n                <li>\n                  <em>3:31</em>\n                  <p>we're gonna use the empty pseudo class by\nwriting colon followed by the word empty.</p>\n                </li>\n                <li>\n                  <em>3:39</em>\n                  <p>And then let's go ahead and</p>\n                </li>\n                <li>\n                  <em>3:40</em>\n                  <p>add a background color property, and set\nthe value to our favorite color, tomato.</p>\n                </li>\n                <li>\n                  <em>3:47</em>\n                  <p>And let's save our style sheet, and</p>\n                </li>\n                <li>\n                  <em>3:49</em>\n                  <p>in our HTML file, as we can see there are\ncurrently no empty elements here,</p>\n                </li>\n                <li>\n                  <em>3:54</em>\n                  <p>they all have child elements, and content\ninside.</p>\n                </li>\n                <li>\n                  <em>3:57</em>\n                  <p>So let's go ahead and remove, the content\nfrom one of our list items.</p>\n                </li>\n                <li>\n                  <em>4:01</em>\n                  <p>So let's say Item 7, so I'm gonna select,\nand delete, the text</p>\n                </li>\n                <li>\n                  <em>4:06</em>\n                  <p>inside of that list item, and once we save\nour file and refresh the page,</p>\n                </li>\n                <li>\n                  <em>4:11</em>\n                  <p>notice how the only element that turns\ntomato red, is that empty list item.</p>\n                </li>\n                <li>\n                  <em>4:16</em>\n                  <p>And again, we can make the selector more\nspecific by saying that we</p>\n                </li>\n                <li>\n                  <em>4:21</em>\n                  <p>only want to target, empty list item\nelements, so,</p>\n                </li>\n                <li>\n                  <em>4:24</em>\n                  <p>right before the empty pseudo class, we're\ngoing to add the LI selector.</p>\n                </li>\n                <li>\n                  <em>4:32</em>\n                  <p>So a good use case, for this empty pesudo\nclass ,may be for a result field or</p>\n                </li>\n                <li>\n                  <em>4:37</em>\n                  <p>a box or element returns empty, with no\ncontent, and then we can for</p>\n                </li>\n                <li>\n                  <em>4:41</em>\n                  <p>example use it to warn, the user that no\nresults were found, or returned.</p>\n                </li>\n                <li>\n                  <em>4:45</em>\n                  <p>Now I've also used the empty pseudo class,\nwhen auditing or</p>\n                </li>\n                <li>\n                  <em>4:49</em>\n                  <p>reviewing HTML code for the first time.</p>\n                </li>\n                <li>\n                  <em>4:51</em>\n                  <p>It's really handy for</p>\n                </li>\n                <li>\n                  <em>4:52</em>\n                  <p>making sure there are no empty, or\nunnecessary HTML tabs in your markup.</p></li></div><div><span id=\"video-duration\">4:58</span>&nbsp;Tut.time.length &nbsp; &nbsp; &nbsp; &nbsp;<span id=\"video-authors\"></span><br></div>"
    }
  ]
}